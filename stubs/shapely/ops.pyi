from _typeshed import Incomplete

class CollectionOperator:
    def shapeup(self, ob): ...
    def polygonize(self, lines): ...
    def polygonize_full(self, lines): ...
    def linemerge(self, lines, directed: bool = ...): ...
    def cascaded_union(self, geoms): ...
    def unary_union(self, geoms): ...

operator: Incomplete
polygonize: Incomplete
polygonize_full: Incomplete
linemerge: Incomplete
cascaded_union: Incomplete
unary_union: Incomplete

def triangulate(geom, tolerance: float = ..., edges: bool = ...): ...
def voronoi_diagram(
    geom, envelope: Incomplete | None = ..., tolerance: float = ..., edges: bool = ...
): ...
def validate(geom): ...
def transform(func, geom): ...
def nearest_points(g1, g2): ...
def snap(g1, g2, tolerance): ...
def shared_paths(g1, g2): ...

class SplitOp:
    @staticmethod
    def split(geom, splitter): ...

split: Incomplete

def substring(geom, start_dist, end_dist, normalized: bool = ...): ...
def clip_by_rect(geom, xmin, ymin, xmax, ymax): ...
def orient(geom, sign: float = ...): ...
