name: Main CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - run: pip install --upgrade pip
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
    - name: Poetry Version
      id: poetry-version
      run: echo "::set-output name=version::$(poetry --version | grep -oP '[\d\.]+')"
    - name: Cache Poetry virtualenv
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: ubuntu-latest-3.10-poetry-${{ steps.poetry-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ubuntu-latest-3.10-poetry-${{ steps.poetry-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: |
        poetry install --with=dev
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Deploy documentation
      run: poetry run mkdocs gh-deploy --force
