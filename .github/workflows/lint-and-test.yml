
# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: "Lint & Test"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
          python-version: "3.12"
    - name: Install Pipx
      run: |
        pip install --upgrade pip
        python3.12 -m pip install --user pipx
        python3.12 -m pipx ensurepath
    - name: Install Hatch
      run: |
        pipx install hatch
    # - name: Cache Poetry virtualenv
    #   uses: actions/cache@v2
    #   id: cache
    #   with:
    #     path: .venv
    #     key: ubuntu-latest-3.11-poetry-${{ steps.poetry-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    #     restore-keys: |
    #       ubuntu-latest-3.11-poetry-${{ steps.poetry-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    # - name: Install dependencies
    #   run: |
    #     poetry install --with=dev
    #   if: steps.cache.outputs.cache-hit != 'true'
    - uses: pre-commit/action@v3.0.0
    - name: Run mypy
      run: hatch run test:mpypy
    - name: Test with pytest
      run: |
        hatch run test:pytest --cov=netext --cov-report=xml:coverage.xml
    - uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        verbose: true # optional (default = false)
